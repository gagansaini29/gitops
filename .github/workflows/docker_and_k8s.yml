# on: push
# name: deploy
# jobs:
#   build-and-push:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v1
#       - uses: vitr/actions-build-and-upload-to-ecs@master
#         with:
#           access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           account_id: ${{ secrets.AWS_ACCOUNT_ID }}
#           dockerfile: Dockerfile
#           path: django/Dockerfile
#           repo: gitops
#           region: ap-south-1
#           tags: 1.0,${{ github.sha }}
#           create_repo: true

# jobs:
#   deploy:
#     name: deploy to cluster
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Install Kubectl   
#       uses: azure/setup-kubectl@v3
#       with:
#        version: '<version>' # default is latest stable
#       id: install

#     - name: Configure AWS credentials
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ap-south-1
    
#     - name: Login to Amazon ECR
#       id: login-ecr
#       # uses: aws-actions/amazon-ecr-login@v1

#     - name: deploy to cluster
#       uses: kodermax/kubectl-aws-eks@master
#       env:
#         KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: gitops
#         IMAGE_TAG: ${{ github.sha }}
#       with:
#         args: set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
#     - name: verify deployment
#       uses: kodermax/kubectl-aws-eks@master
#       env:
#         KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
#       with:
#         args: rollout status deployment/my-app
    
#     - name: Deploy image to Amazon ECR
#       run: kubectl apply -f kubernetes/dep.yml